package com.app.maffan.bookbank;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.app.maffan.bookbank.JoinBookWithAuthor;
import com.app.maffan.bookbank.Book;
import com.app.maffan.bookbank.Author;
import com.app.maffan.bookbank.Publisher;

import com.app.maffan.bookbank.JoinBookWithAuthorDao;
import com.app.maffan.bookbank.BookDao;
import com.app.maffan.bookbank.AuthorDao;
import com.app.maffan.bookbank.PublisherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig joinBookWithAuthorDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig authorDaoConfig;
    private final DaoConfig publisherDaoConfig;

    private final JoinBookWithAuthorDao joinBookWithAuthorDao;
    private final BookDao bookDao;
    private final AuthorDao authorDao;
    private final PublisherDao publisherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        joinBookWithAuthorDaoConfig = daoConfigMap.get(JoinBookWithAuthorDao.class).clone();
        joinBookWithAuthorDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        authorDaoConfig = daoConfigMap.get(AuthorDao.class).clone();
        authorDaoConfig.initIdentityScope(type);

        publisherDaoConfig = daoConfigMap.get(PublisherDao.class).clone();
        publisherDaoConfig.initIdentityScope(type);

        joinBookWithAuthorDao = new JoinBookWithAuthorDao(joinBookWithAuthorDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        authorDao = new AuthorDao(authorDaoConfig, this);
        publisherDao = new PublisherDao(publisherDaoConfig, this);

        registerDao(JoinBookWithAuthor.class, joinBookWithAuthorDao);
        registerDao(Book.class, bookDao);
        registerDao(Author.class, authorDao);
        registerDao(Publisher.class, publisherDao);
    }
    
    public void clear() {
        joinBookWithAuthorDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        authorDaoConfig.clearIdentityScope();
        publisherDaoConfig.clearIdentityScope();
    }

    public JoinBookWithAuthorDao getJoinBookWithAuthorDao() {
        return joinBookWithAuthorDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public AuthorDao getAuthorDao() {
        return authorDao;
    }

    public PublisherDao getPublisherDao() {
        return publisherDao;
    }

}
